package com.citi.hackathon.Portfolio.Manager.repo;

import com.citi.hackathon.Portfolio.Manager.Entites.CashAccount;
import com.citi.hackathon.Portfolio.Manager.rest.CashAccountController;
import com.citi.hackathon.Portfolio.Manager.service.CashAccountService;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;
import org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManager;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit.jupiter.SpringExtension;

import java.util.stream.StreamSupport;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.equalTo;

@ExtendWith(SpringExtension.class)
@DataJpaTest // use an in memory database

public class TestCashAccountRepository {
    @Autowired
    private TestEntityManager manager;

    @Autowired
    private CashAccountRepository repo;

    @Autowired
    CashAccountService cashAccountService;

    @Autowired
    CashAccountController controller;

    private int cashAccountID;

    @BeforeEach
    public void setupDatabaseEntryForReadOnlyTest() {
        //Shouldn't the ID be autogenerated?
        CashAccount account = new CashAccount(1, 4500.20, "Savings Account");
        CashAccount result = manager.persist(account);
        cashAccountID = result.getCashaccountid();
    }

//    @Test
//    public void controllerCanReturnAccountById(){
//        CashAccount cashAccount = controller.getCashAccountById(cashAccountID);
//        assertThat(cashAccount.getAccountType(), equalTo("Savings Account"));
//    }

//    Stream<CashAccount> stream = StreamSupport.stream()

}
