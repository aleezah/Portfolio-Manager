package com.citi.hackathon.Portfolio.Manager.repo;

import com.citi.hackathon.Portfolio.Manager.Entites.InvestmentAccount;
import com.citi.hackathon.Portfolio.Manager.rest.InvestmentAccountController;
import com.citi.hackathon.Portfolio.Manager.service.InvestmentAccountService;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;
import org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManager;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit.jupiter.SpringExtension;

import java.util.stream.StreamSupport;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.equalTo;

@ExtendWith(SpringExtension.class)
@DataJpaTest // use an in memory database

public class TestInvestmentAccountRepository {
    @Autowired
    private TestEntityManager manager;

    @Autowired
    private InvestmentAccountRepository repo;

    @Autowired
    InvestmentAccountService InvestmentAccountService;

    @Autowired
    InvestmentAccountController controller;

    private int InvestmentAccountID;

    @BeforeEach
    public void setupDatabaseEntryForReadOnlyTest() {
        //Shouldn't the ID be autogenerated?
        InvestmentAccount account = new InvestmentAccount(3333.33);
        InvestmentAccount result = manager.persist(account);
        InvestmentAccountID = result.getInvestmentaccountid();
    }

    @Test
    public void controllerCanReturnAccountById(){
        InvestmentAccount investmentAccount = controller.getInvestmentAccountById(InvestmentAccountID);
        assertThat(investmentAccount.getFunds(), equalTo(3333.33));
    }

//    Stream<InvestmentAccount> stream = StreamSupport.stream()

}
